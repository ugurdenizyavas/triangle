<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<context:annotation-config />

	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="framework_daoTemplate" class="com.deniz.framework.persistence.DaoTemplate"
		abstract="true">
		<description>Base spring bean definition that is used as parent for
			all dao beans</description>
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean" parent="framework_AbstractSessionFactory">
		<property name="packagesToScan">
			<list merge="true">
				<!-- Add new packages to scan here -->
			</list>
		</property>
	</bean>
	
	<bean id="framework_AbstractSessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"
		abstract="true">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.cache.use_second_level_cache">false</prop>
                <prop key="hibernate.hbm2ddl.auto">create</prop>
            </props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com/deniz/**/persistence/entity</value>
			</list>
		</property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="dataSource" ref="dataSource" />
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="${persistence.database.url}" />
		<property name="username" value="${persistence.database.username}" />
		<property name="password" value="${persistence.database.password}" />
		<property name="connectionInitSqls" value="${persistence.database.connectionInitSqls}" />
		<property name="initialSize" value="${persistence.database.initialSize}" />
		<property name="maxActive" value="${persistence.database.maxActive}" />
		<property name="maxIdle" value="${persistence.database.maxIdle}" />
		<property name="minIdle" value="${persistence.database.minIdle}" />
		<property name="maxWait" value="${persistence.database.maxWait}" />

		<property name="validationQuery" value="${persistence.database.validationQuery}" />
		<property name="testOnBorrow" value="${persistence.database.testOnBorrow}" />
		<property name="testOnReturn" value="${persistence.database.testOnReturn}" />
		<property name="testWhileIdle" value="${persistence.database.testWhileIdle}" />
		<property name="timeBetweenEvictionRunsMillis"
			value="${persistence.database.timeBetweenEvictionRunsMillis}" />
		<property name="numTestsPerEvictionRun"
			value="${persistence.database.numTestsPerEvictionRun}" />
		<property name="minEvictableIdleTimeMillis"
			value="${persistence.database.minEvictableIdleTimeMillis}" />

		<property name="poolPreparedStatements"
			value="${persistence.database.poolPreparedStatements}" />
		<property name="maxOpenPreparedStatements"
			value="${persistence.database.maxOpenPreparedStatements}" />

		<property name="removeAbandoned" value="${persistence.database.removeAbandoned}" />
		<property name="removeAbandonedTimeout"
			value="${persistence.database.removeAbandonedTimeout}" />
		<property name="logAbandoned" value="${persistence.database.logAbandoned}" />

	</bean>

	<bean id="transactionTemplate"
		class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager" ref="transactionManager" />
	</bean>
	
</beans>